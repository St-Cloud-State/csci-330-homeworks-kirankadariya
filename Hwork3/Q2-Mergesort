Script started on 2025-02-16 18:18:25+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="127" LINES="11"]
[0;32m@kirankadariya [0mâžœ [1;34m/workspaces/csci-330-homeworks-kirankadariya/Hwork3 [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (defun partition (lst)
  "Splits LST into two nearly equal halves."
  (labels ((split-helper (lst left right toggle)
             (cond ((null lst) (list (reverse left) (reverse right)))
                   (toggle (split-helper (cdr lst) (cons (car lst) left) right nil))
                   (t (split-helper (cdr lst) left (cons (car lst) right) t)))))
    (split-helper lst '() '() t)))

(defun merg
PARTITION
* e-lists (left right)
  "Merges two sorted lists into one sorted list."
  (cond ((null left) right)
        ((null right) left)
        ((<= (car left) (car right)) (cons (car left) (merge-lists (cdr left) right)))
        (t (cons (car right) (merge-lists left (cdr right))))))

(defun mergesort (lst
MERGE-LISTS
* )
  "Recursively sorts LST using the merge sort algorithm."
  (if (or (null lst) (null (cdr lst)))
      lst
      (let* ((halves (partition lst))
             (left (car halves))
             (right (cadr halves)))
        (merge-lists (mergesort left) (mergesort right)))))

;; Test the mergesort f
MERGESORT
* unction
(format t "Sorted List: ~a~%" (mergesort '(11 8 7 9 1 6)))
Sorted List: (1 6 7 8 9 11)
NIL
* (Quit    quit)
[0;32m@kirankadariya [0mâžœ [1;34m/workspaces/csci-330-homeworks-kirankadariya/Hwork3 [0;36m([1;31mmain[0;36m) [0m$ exit
exit

Script done on 2025-02-16 18:20:24+00:00 [COMMAND_EXIT_CODE="0"]
