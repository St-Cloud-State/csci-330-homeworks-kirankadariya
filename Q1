Script started on 2025-02-04 00:08:55+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="127" LINES="11"]
[0;32m@kirankadariya [0mâžœ [1;34m/workspaces/csci-330-homeworks-kirankadariya [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* What does (NOT (EQUAL 3 (ABS -3))) evaluate to?                                               (NOT (EQUAL 3 (ABS -3)))

NIL
* (EVAL (/ (+ 8 12) 2))

10
* (EVAL (+ (* 3 3) (* 4 4)))

25
* (defun miles-per-gallon (initial-odometer-reading final-odometer-reading gallons-consumed)
  (/ (- final-odometer-reading initial-odometer-reading) gallons-consumed))

MILES-PER-GALLON
* (third '(the quick brown fox))

BROWN
* (list 2 'and 2 'is 4)

(2 AND 2 IS 4)
* (+ 1 (length (list t t t t)))

5
* (cons 'patrick '(seymour marvin))

(PATRICK SEYMOUR MARVIN)
* (cons 'patrick (list 'seymour 'marvin))

(PATRICK SEYMOUR MARVIN)
* (defun mystery (x)
  (list (second x) (first x)))

MYSTERY
* (bear dancing)
; in: BEAR DANCING
;     (BEAR DANCING)
; 
; caught STYLE-WARNING:
;   undefined function: BEAR
; 
; caught WARNING:
;   undefined variable: DANCING
; 
; compilation unit finished
;   Undefined function:
;     BEAR
;   Undefined variable:
;     DANCING
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable DANCING is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA ()))
   source: (BEAR DANCING)
0] (mystery 'dancing 'bear)
; in: BEAR DANCING
;     (MYSTERY 'DANCING 'BEAR)
; 
; caught STYLE-WARNING:
;   The function was called with two arguments, but wants exactly one.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  invalid number of arguments: 2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

(MYSTERY DANCING BEAR) [external]
   source: (SB-INT:NAMED-LAMBDA MYSTERY
               (X)
             (BLOCK MYSTERY (LIST (SECOND X) (FIRST X))))
0[2] (NIL zowie)
; in: BEAR DANCING
;     (NIL ZOWIE)
; 
; caught WARNING:
;   The function NIL is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; caught WARNING:
;   undefined variable: ZOWIE
; 
; compilation unit finished
;   Undefined function:
;     NIL
;   Undefined variable:
;     ZOWIE
;   caught 2 WARNING conditions

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:NIL is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

((LAMBDA (#:G390)) #<unused argument>)
   source: (NIL ZOWIE)
0[3] (second first)
; in: BEAR DANCING
;     (SECOND FIRST)
; --> CADR CAR 
; ==>
;   (CDR FIRST)
; 
; caught WARNING:
;   undefined variable: FIRST
; 
; compilation unit finished
;   Undefined variable:
;     FIRST
;   ca